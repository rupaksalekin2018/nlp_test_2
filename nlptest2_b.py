# -*- coding: utf-8 -*-
"""nlpTest2_B.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SoRbWXYAqGaNhTvmUX4uLFaDjer4tnX3
"""

#### Exam B
import pandas as pd

real_estate_data = [
{'property_id': 1, 'property_type': 'Apartment', 'size_sqft': 1200, 'location': 'Downtown', 'bedrooms': 2, 'price_usd': 25000},
{'property_id': 2, 'property_type': 'House', 'size_sqft': 2000, 'location': 'Suburb', 'bedrooms': 3, 'price_usd' : 350000},
{'property_id': 3, 'property_type': 'Apartment', 'size_sqft': 800, 'location': 'Uptown', 'bedrooms': 1, 'price_usd' : 150000},
{'property_id': 4, 'property_type': 'Condo', 'size_sqft': 1500, 'location': 'Downtown', 'bedrooms': 2, 'price_usd': 3000001},
{'property_id': 5, 'property_type': 'House', 'size_sqft': 1800, 'location': 'Suburb', 'bedrooms': 4, 'price_usd' : 400000} ]

df = pd.DataFrame(real_estate_data)

df

# 1. Calculate the average size of properties in the dataset
sum = 0
for i in df['size_sqft']:
  sum = sum + i

avg_size_of_properties = sum / len(df['size_sqft'])

print(avg_size_of_properties)

# 2. Identify and list properties located in the downtown area.

downtown_area = df[df['location'] == 'Downtown']

print(downtown_area)

# 3. Find properties with a price higher than $300,000.

prices_higher_than_300000 = df[df['price_usd'] > 300000]

print(prices_higher_than_300000)

# 4. Determine the distribution of property types in the dataset.
df['property_type'].value_counts()

# 5. Identify and list apartments with a price less than $200000

prices_less_than_200000 = df[df['price_usd'] < 200000]

print(prices_less_than_200000)

# 6. Calculate the average price per square foot for all properties
sum = 0
for i in df['price_usd']:
  sum = sum + i

avg_size_of_properties = sum / len(df['price_usd'])

print(avg_size_of_properties)

# 7. Identify and list houses with a size greater than 1,800 sqft.

house_sizes_greater_than_1800 = df[df['size_sqft'] > 1800]

print(house_sizes_greater_than_1800)

# 8. Determine the distribution of the number of bedrooms in the dataset.
df['bedrooms'].value_counts()

# 9. Find properties with 3 bedrooms and a price less than $300,000.
df[(df['bedrooms'] == 3 ) & (df['price_usd'] < 300000) ]

# 10.Categorize properties into size ranges (e.g., Small, Medium, Large) based on their square footage.

def categorize_size(sqft):
    if sqft < 1000:
        return 'Small'
    elif 1000 <= sqft <= 1500:
        return 'Medium'
    else:
        return 'Large'

# Applying the function to create a new 'size_category' column
df['size_category'] = df['size_sqft'].apply(categorize_size)

df

def categorize_size(sqft):
    if sqft < 1000:
        return 'Small'
    elif (1000 <= sqft) and (sqft <= 1500):
        return 'Medium'
    else:
        return 'Large'

# Applying the function to create a new 'size_category' column
df['size_category'] = df['size_sqft'].apply(categorize_size)

df

